class apache::install {
  package { [ "apache2", "libapache2-mod-gnutls" ]:
    ensure => present,
  }
    file { "/etc/apache2/ssl":
        ensure  => directory,
        owner   => root,
        group   => root,
        mode    => 700,
	require => Package["apache2"],
    }
}
class apache::service {
  service { "apache2":
    ensure => running,
    hasstatus => true,
    hasrestart => true,
    enable => true,
    require => Class["apache::install"],
  } 
}

define apache::module ( $ensure = 'present' ) {
	case $ensure {
		'present' : {
            		exec { "/usr/sbin/a2enmod $name":
               		unless => "/bin/readlink -e /etc/apache2/mods-enabled/${name}.load",
    			require => Class["apache::install"],
    			notify => Class["apache::service"],
            		}
         	}
         	'absent': {
            		exec { "/usr/sbin/a2dismod $name":
               		onlyif => "/bin/readlink -e /etc/apache2/mods-enabled/${name}.load",
    			require => Class["apache::install"],
    			notify => Class["apache::service"],
            		}
         	}
         	default: { err ( "Unknown ensure value: '$ensure'" ) }
      	}
}

define apache::site ( $priority = '10', $ensure = 'present' ) {
	case $ensure {
         	'present' : {
            		exec { "/usr/sbin/a2ensite ${priority}-${name}":
               		unless => "/bin/readlink -e /etc/apache2/sites-enabled/${priority}-${name}",
    			require => Class["apache::install"],
    			notify => Class["apache::service"],
    			}
   		}
   		'absent' : {
            		exec { "/usr/sbin/a2dissite ${priority}-${name}":
               		onlyif => "/bin/readlink -e /etc/apache2/sites-enabled/${priority}-${name}",
    			require => Class["apache::install"],
    			notify => Class["apache::service"],
            		}
         	}
         	default: { err ( "Unknown ensure value: '$ensure'" ) }
      	}
}

define apache::vhost( $port, $sslport, $docroot, $ssl=true, $template='apache-vhost.erb', $priority = '10', $serveraliases = '' ) {
  file {"/etc/apache2/sites-available/${priority}-${name}":
    	content => template("apache-vhost.erb"),
    	owner => 'root',
    	group => 'root',
    	mode => '777',
    	require => Class["apache::install"],
    	notify => Class["apache::service"],
    }
    file { "/var/www/${name}":
        ensure  => directory,
        owner   => www-data,
        group   => www-data,
        mode    => 700,
	before	=> File["/etc/apache2/sites-available/${priority}-${name}"],
    }
        file { "/etc/apache2/ssl/${name}.pem":
                owner => root,
                group => root,
                mode => 700,
                source  => "puppet://puppet.netcube.pl/files/ssl/CRT/${name}.pem",
        }
}

class apache {
  include apache::install, apache::service
}

class php::packages {
  package { [ "libapache2-mod-php5", "php5-mysql", "php5-gd", "php5", "php5-cli", "php5-mcrypt", "mcrypt" ]:
    ensure => present,
  }
}

class php {
	include php::packages
}

