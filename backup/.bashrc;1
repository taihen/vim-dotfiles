# ~/.bashrc: executed by bash(1) for non-login shells.

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# setup locales
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8

# don't put duplicate lines in the history. See bash(1) for more options
# don't overwrite GNU Midnight Commander's setting of `ignorespace'.
export HISTCONTROL=$HISTCONTROL${HISTCONTROL+,}ignoredups
# ... or force ignoredups and ignorespace
export HISTCONTROL=ignoreboth
export HISTCONTROL=ignoredups
export HISTCONTROL=erasedups
export HISTCONTROL=ignorespace
export HISTIGNORE="&"
export HISTSIZE=9999
export HISTFILESIZE=9999
export MYSQL_HISTFILE
export HISTFILE
export HISTTIMEFORMAT="[%d/%m/%y %T] "

HISTFILE="${HOME}/.hist/.sh_history_`hostname`"
MYSQL_HISTFILE="${HOME}/.hist/.mysql_history_`hostname`"

# append to the history file, don't overwrite it
shopt -s histappend

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize
shopt -s cdspell
shopt -s cmdhist

# changing default mask
umask 027

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
    xterm) color_prompt=no;;
    xterm-256color) color_prompt=yes;;
    screen-256color) color_prompt=yes;;
    rxvt-unicode-256color) color_prompt=yes;;

esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=no
    fi
fi

if [ "$color_prompt" = yes ]; then
     PS1="\[\033[30m\][\!]\`if [[ \$? = "0" ]]; then echo "\\[\\033[34m\\]"; else echo "\\[\\033[31m\\]"; fi\`[\u.\h:\W] \[\033[1;33m\]\$\[\033[0m\] "; echo -ne "\033]0;`hostname -s`:`pwd | awk -F\/ '{print $(NF)}'`\007"
else
     PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi

unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable color support of ls and also add handy aliases, well solarized
if [ -x /usr/bin/dircolors ]; then
    eval "`dircolors $HOME/.dircolors/dircolors-solarized/dircolors.ansi-universal`"
#   eval "`dircolors -b`"
    alias ls='ls --color=auto --group-directories-first'
    alias dir='dir --color=auto'
    alias vdir='vdir --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -l'
alias la='ls -A'
alias l='ls -CF'

# Local Path
if [ -d ~/Scripts ] ; then
    PATH=~/Scripts:/usr/local/bin:/usr/local/sbin:/usr/local/Cellar/python3/3.2/bin:/var/lib/gems/1.8/bin:"${PATH}"
fi

# Enable programmable completion features if they're not already
# enabled, and if they are available.
if [ -z "$BASH_COMPLETION" ] && [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
fi

if [ -z "$BASH_COMPLETION" ] && [ -f /usr/local/etc/bash_completion ]; then
    . /usr/local/etc/bash_completion
fi

if [ -f `brew --prefix`/etc/bash_completion ]; then
    . `brew --prefix`/etc/bash_completion
fi

#  Disable beeps in X.org
if [ ! -z "${DISPLAY}" ]; then
    if [ -f /usr/bin/xset ]; then
        xset b off
    fi
fi

#  Now for the console too - unless we're connecting via SSH
if [ -z "$SSH_CLIENT" ]; then
    if [ ! -z "$TERM" ]; then
        if [ -f /usr/bin/setterm ]; then
            setterm -blength 0
        fi
    fi
fi

# Start X when I login to first tty

if [ -z "$DISPLAY" ] && [ $(tty) = /dev/tty1 ]; then
    while true
    do
    startx --
    sleep 10
    done
fi
if [ -z "$DISPLAY" ] && [ $(tty) = /dev/tty2 ]; then
    while true
    do
    ~/Scripts/windows.sh
    sleep 10
    done
fi


keychain ~/.ssh/id_rsa

export GIT_AUTHOR_NAME='Andrzej Wolski'
export GIT_COMMITTER_NAME=taihen
export GIT_AUTHOR_EMAIL=taihen@taihen.org
export GIT_COMMITTER_EMAIL=taihen@taihen.org
export GIT_EDITOR=vim
